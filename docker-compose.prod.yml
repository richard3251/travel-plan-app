services:
  # 프론트엔드 (Nginx)
  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-http://localhost:8080/api}
    container_name: travel-app-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

  # 백엔드 (Spring Boot)
  backend:
    build: ./backend
    container_name: travel-app-backend
    ports:
      - "8080:8080"
    environment:
      # 데이터베이스
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/travel_app?serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}

      # JWT
      - JWT_SECRET=${JWT_SECRET}

      # Kakao API
      - KAKAO_REST_API_KEY=${KAKAO_REST_API_KEY}

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}

      # AWS S3
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION:-ap-northeast-2}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

      # CORS
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}

      # 프로필 설정
      - SPRING_PROFILES_ACTIVE=prod

      # 애플리케이션
      - APP_BASE_URL=${APP_BASE_URL}
    depends_on:
      - redis
      - mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    container_name: travel-app-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass} ${REDIS_PASSWORD}
    restart: unless-stopped

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: travel-app-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: travel_app
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

volumes:
  redis_data:
  mysql_data:
